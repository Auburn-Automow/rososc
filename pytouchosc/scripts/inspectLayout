#!/usr/bin/env python

import os
import sys

import roslib; roslib.load_manifest('pytouchosc')

import pytouchosc

def main(argv, stdout):
    parser = OptionParser()
    parser.add_option("-t", action="store_true", dest="tabpages")
    parser.add_option("-c", action="store_true", dest="controls")
    (options, args) = parser.parse_args(argv)
    
    if len(args) <  2:
        parser.error("Please specify a layout file.")
        sys.exit(1)
    layoutFilePath = args[1]
    
    if not os.path.isfile(layoutFilePath):
        parser.error("Layout file not found %s"%layoutFilePath)
        sys.exit(1)
        
    try:
        layout = pytouchosc.Layout.createFromExisting(layoutFilePath)
    except IOError as e:
        parser.error(e.msg)
        sys.exit(1)
    
    (_,layoutName) = os.path.split(layoutFilePath)
    layoutName = layoutName.rpartition(".")[0]
    
    string = '{0:<30}{1:<30}'
    divider = '{:*^60}'.format('*')
    
    print divider
    print string.format("Layout Filename", os.path.basename(layoutFilePath))
    print string.format("Layout Location", os.path.dirname(layoutFilePath))
    print divider
    print string.format("Version", layout.version)
    print string.format("Orientation", layout.orientation)
    if layout.mode == '0':
        m = "iPod"
    elif layout.mode == '1':
        m = "iPad"
    print string.format("Mode (Device)", layout.mode + "-" + m)
    print divider
    if options.tabpages:
        print string.format("Number of Tabpages", layout.getNumberTabpages())
        for tabpage in layout.getTabpageNames():
            print '{: ^5}{:<30}'.format(' ',tabpage)
    if options.controls:
        for name in layout.getTabpageNames():
            tabpage = layout.getTabpage(name)
            for x in tabpage.iterchildren():
                controlName = "/".join(["", name, x.name])
                controlClass =  x.__class__.__name__
                print '{:<30}{:<30}'.format(controlName,controlClass)

    
if __name__ == "__main__":
    from optparse import OptionParser
    main(sys.argv, sys.stdout)
